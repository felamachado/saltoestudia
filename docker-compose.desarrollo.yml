version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: dockerfile.frontend
    container_name: saltoestudia-dev-frontend
    restart: unless-stopped
    env_file: config-desarrollo.env
    volumes:
      - .:/app  # Hot reload
      - ./data:/app/data:ro
    ports:
      - "3000:3000"
    networks:
      - saltoestudia-dev-net
    depends_on:
      - backend
    labels:
      - "com.docker.compose.project=saltoestudia-dev"

  backend:
    build:
      context: .
      dockerfile: dockerfile.backend
    container_name: saltoestudia-dev-backend
    restart: unless-stopped
    env_file: config-desarrollo.env
    volumes:
      - .:/app  # Hot reload
      - ./data:/app/data:rw
      - ./logs:/app/logs:rw
    ports:
      - "8000:8000"
    networks:
      - saltoestudia-dev-net
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "com.docker.compose.project=saltoestudia-dev"

  postgres:
    image: postgres:15-alpine
    container_name: saltoestudia-dev-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: saltoestudia
      POSTGRES_USER: saltoestudia
      POSTGRES_PASSWORD: dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"  # Para acceso directo desde host
    networks:
      - saltoestudia-dev-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U saltoestudia"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "com.docker.compose.project=saltoestudia-dev"

networks:
  saltoestudia-dev-net:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local 