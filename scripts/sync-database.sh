#!/bin/bash

# Script para sincronizar la base de datos en producci√≥n
# Este script resuelve el problema de que Reflex usa diferentes archivos de BD
# en desarrollo (data/saltoestudia.db) vs producci√≥n (reflex.db)

set -e

echo "üîÑ Iniciando sincronizaci√≥n de base de datos..."

# Verificar si estamos en Docker (producci√≥n)
if [ -d "/app" ]; then
    echo "üìç Entorno detectado: Producci√≥n (Docker)"
    cd /app
else
    echo "üìç Entorno detectado: Desarrollo (Local)"
fi

# Verificar si existe la base de datos con datos
if [ -f "data/saltoestudia.db" ]; then
    echo "‚úÖ Base de datos con datos encontrada en data/saltoestudia.db"
    
    # Verificar si la base de datos de Reflex existe y tiene datos
    if [ -f "reflex.db" ]; then
        echo "üìä Verificando contenido de reflex.db..."
        
        # Contar registros en reflex.db
        REFLEX_CURSOS=$(python3 -c "
import sqlite3
try:
    conn = sqlite3.connect('reflex.db')
    cursor = conn.cursor()
    cursor.execute('SELECT COUNT(*) FROM curso')
    count = cursor.fetchone()[0]
    conn.close()
    print(count)
except:
    print('0')
" 2>/dev/null)
        
        echo "üìà Cursos en reflex.db: $REFLEX_CURSOS"
        
        # Si reflex.db est√° vac√≠a, copiar desde data/saltoestudia.db
        if [ "$REFLEX_CURSOS" -eq "0" ]; then
            echo "üîÑ reflex.db est√° vac√≠a, copiando datos desde data/saltoestudia.db..."
            cp data/saltoestudia.db reflex.db
            echo "‚úÖ Base de datos sincronizada"
        else
            echo "‚úÖ reflex.db ya tiene datos, no es necesario sincronizar"
        fi
    else
        echo "üîÑ reflex.db no existe, copiando desde data/saltoestudia.db..."
        cp data/saltoestudia.db reflex.db
        echo "‚úÖ Base de datos creada y sincronizada"
    fi
else
    echo "‚ö†Ô∏è  No se encontr√≥ data/saltoestudia.db"
    echo "üí° Ejecutando migraciones y seed..."
    
    # Ejecutar migraciones si no existen
    if [ -d "alembic" ]; then
        echo "üîÑ Aplicando migraciones con Alembic..."
        alembic upgrade head
    else
        echo "üîÑ Inicializando base de datos con Reflex..."
        reflex db migrate
    fi
    
    # Ejecutar seed
    if [ -f "seed.py" ]; then
        echo "üå± Ejecutando seed..."
        python3 seed.py
    fi
    
    # Verificar que se cre√≥ la base de datos
    if [ -f "data/saltoestudia.db" ]; then
        echo "‚úÖ Base de datos creada exitosamente"
        # Copiar a reflex.db para consistencia
        cp data/saltoestudia.db reflex.db
        echo "‚úÖ Base de datos sincronizada"
    else
        echo "‚ùå Error: No se pudo crear la base de datos"
        exit 1
    fi
fi

# Verificaci√≥n final
echo "üîç Verificaci√≥n final..."
CURSOS_FINAL=$(python3 -c "
import sqlite3
try:
    conn = sqlite3.connect('reflex.db')
    cursor = conn.cursor()
    cursor.execute('SELECT COUNT(*) FROM curso')
    count = cursor.fetchone()[0]
    conn.close()
    print(count)
except:
    print('0')
" 2>/dev/null)

INSTITUCIONES_FINAL=$(python3 -c "
import sqlite3
try:
    conn = sqlite3.connect('reflex.db')
    cursor = conn.cursor()
    cursor.execute('SELECT COUNT(*) FROM instituciones')
    count = cursor.fetchone()[0]
    conn.close()
    print(count)
except:
    print('0')
" 2>/dev/null)

echo "üìä Estado final de la base de datos:"
echo "   - Cursos: $CURSOS_FINAL"
echo "   - Instituciones: $INSTITUCIONES_FINAL"

if [ "$CURSOS_FINAL" -gt "0" ] && [ "$INSTITUCIONES_FINAL" -gt "0" ]; then
    echo "‚úÖ Base de datos sincronizada correctamente"
    exit 0
else
    echo "‚ùå Error: La base de datos no tiene datos v√°lidos"
    exit 1
fi 